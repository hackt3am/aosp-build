#!/bin/bash
[ -f /.dockerenv ] || { echo "please run in supplied container"; exit 1; }
set -e; eval "$(environment)"

device="${DEVICE?}"
base_dir="${BASE_DIR?}"
external_dir="${EXTERNAL_DIR?}"
temp_dir="$(mktemp -d)"
download_dir="${temp_dir}/downloads/"
vendor_dir="${external_dir}/vendor"
vendor_out="${external_dir}/vendor/out"
factory_url="https://dl.google.com/dl/android/aosp"
build_datetime="${BUILD_DATETIME?}"
factory_build="${FACTORY_BUILD?}"
factory_hash="${FACTORY_HASH?}"
factory_crc="${FACTORY_HASH:0:8}"
factory_file="${device}-${factory_build}-factory-${factory_crc}.zip"
factory_dir="${vendor_dir}/${device}/${factory_build}"

mkdir -p "${download_dir}" "${factory_dir}" "${vendor_out}"

# TODO: disabled manual download because OTA needs to be downloaded in addition to factory at moment
# Fetch/extract proprietary blobs
# if [ ! -f "${factory_dir}/${factory_file}" ]; then
# 	wget "${factory_url}/${factory_file}" -O "${download_dir}/${factory_file}"
# 	file_hash="$(sha256sum "${download_dir}/${factory_file}" | cut -c1-64)"
# 	[[ "${factory_hash}" == "$file_hash" ]] || \
# 		{ ( >&2 echo "Invalid hash for ${factory_file}" ); exit 1; }
# 	mv "${download_dir}/${factory_file}" "${factory_dir}/${factory_file}"
# fi
"${base_dir}/vendor/android-prepare-vendor/execute-all.sh" \
	--debugfs \
	--yes \
	--device "${device}" \
	--buildID "${factory_build}" \
	--output "${vendor_out}" \
	--timestamp "${build_datetime}"
