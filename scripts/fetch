#!/bin/bash
[ -f /.dockerenv ] || { echo "please run in supplied container"; exit 1; }
set -e; eval "$(environment)"

cp /etc/gitconfig ~/.gitconfig

cores=$(nproc)
external_dir="${EXTERNAL_DIR?}"
manifest_dir="${PWD}/manifests"
manifest_repo="${PWD}/manifests"
build_kernel="${BUILD_KERNEL?}"
kernel_name="${KERNEL_NAME?}"
kernel_dir="${external_dir}/kernel/${kernel_name}"
build_chromium="${BUILD_CHROMIUM?}"
chromium_dir="${external_dir}/chromium"
chromium_repo="https://chromium.googlesource.com/chromium/"
chromium_build_tools_url="${chromium_repo}/tools/depot_tools.git"
chromium_src_ref=${CHROMIUM_SRC_REF}
chromium_depot_tools_ref=${CHROMIUM_DEPOT_TOOLS_REF}
base_dir="base"

mkdir --parents "${base_dir}" "${manifest_dir}"

rsync -P --archive --verbose "${manifest_repo}/" "${manifest_dir}/"

export GIT_WORK_TREE="$manifest_dir"
export GIT_DIR="${manifest_dir}/.git"
[ -d "${manifest_dir}/.git" ] || git init
git add .
git commit --all --message "automated cache commit" || :
unset GIT_DIR GIT_WORK_TREE

echo "Cloning platform..."
cd "${base_dir}"
[ -d "${base_dir}/.repo" ] || \
	repo init \
		--no-clone-bundle \
		--manifest-url "${manifest_dir}" \
		--manifest-name base.xml
retry 3 repo sync \
	--current-branch \
	--no-tags \
	--force-sync \
	--no-clone-bundle \
	--jobs "${cores}"
repo forall -c 'git reset --hard ; git clean --force -dx'

# Kernel
if [ "${build_kernel}" == "true" ]; then
	echo "Cloning kernel..."
	mkdir -p "${kernel_dir}"
	cd "${kernel_dir}"
	rm -rf "${kernel_dir}/.repo"
	repo init \
		--manifest-url "${manifest_dir}" \
		--manifest-name "kernel-${kernel_name}.xml"
	repo sync -c --no-tags --force-sync --no-clone-bundle --jobs "${cores}"
	repo forall -c 'git reset --hard ; git clean -fdx'
fi

# Chromium
if [ "${build_chromium}" == "true" ]; then
echo "Cloning chromium..."
	[ ! -d "${chromium_dir}/depot_tools" ] && \
		git clone "${chromium_build_tools_url}" "${chromium_dir}/depot_tools"
	cd "${chromium_dir}/depot_tools"
	git fetch
	git reset --hard "${chromium_depot_tools_ref}"

	export PATH="$PATH:${chromium_dir}/depot_tools"
	mkdir -p "${chromium_dir}"
	cd "${chromium_dir}"
	[ ! -d "${chromium_dir}/src/.git" ] && \
		yes Y | "${chromium_dir}/depot_tools/fetch" --nohooks android
	yes Y | gclient sync --with_branch_heads --jobs "${cores}" -RDf
	gclient runhooks

	cd "${chromium_dir}/src"
	git reset --hard "${chromium_src_ref}"
fi
